plugins {
	id 'java'
  id 'maven-publish'
  id "com.enonic.xp.app" version "3.5.2"
  id "com.github.node-gradle.node" version "7.1.0"
  id 'no.item.xp.codegen' version '2.6.3'
}

app {
	name = "${appName}"
	displayName = "${appDisplayName}"
	vendorName = "${vendorName}"
	vendorUrl = "${vendorUrl}"
	systemVersion = "${xpVersion}"
}

dependencies {
	include "com.enonic.xp:lib-i18n:${xpVersion}"
	include "com.enonic.xp:lib-portal:${xpVersion}"
	include "com.enonic.xp:lib-content:${xpVersion}"
  include "com.rometools:rome:2.1.0"
  include 'com.github.tineikt:xp-lib-freemarker:2.0.3'
  include 'no.item:lib-xp-time:1.2.1'
}

repositories {
  mavenLocal()
  mavenCentral()
  xp.enonicRepo()
  maven { url "https://repo.itemtest.no/releases" }
  maven { url "https://jitpack.io" }
}

node {
  download = true
  version = "22.14.0"
}

processResources {
  exclude "**/.gitkeep"
  exclude "**/*.json"
  exclude "**/*.ts"
  exclude "**/*.tsx"
}

tasks.register("dev", Exec) {
  if (org.gradle.internal.os.OperatingSystem.current().isWindows()) {
    commandLine "cmd", "/c", "gradlew.bat", "deploy", "-t"
  } else {
    commandLine "./gradlew", "deploy", "-t"
  }
}

tasks.register("npmBuild", NpmTask) {
  args = [
    "run",
    "--silent",
    "build"
  ]
  dependsOn npmInstall
  environment = [
    "FORCE_COLOR": "true",
    "LOG_LEVEL_FROM_GRADLE": gradle.startParameter.logLevel.toString(),
    "NODE_ENV": project.hasProperty("dev") || project.hasProperty("development") ? "development" : "production"
  ]
  inputs.dir "src/main/resources"
  outputs.dir "build/resources/main"
  outputs.upToDateWhen { false }
}

jar.dependsOn npmBuild

tasks.register("npmCheck", NpmTask) {
  dependsOn npmInstall
  args = [
    "run",
    "check"
  ]
  environment = [
    "FORCE_COLOR": "true",
  ]
}

check.dependsOn npmCheck

tasks.withType(Copy).configureEach {
  includeEmptyDirs = false
}

publishing {
  repositories {
    maven {
      name = "itemtestRepository"
      url = "https://repo.itemtest.no/releases"
      credentials(PasswordCredentials)
      authentication {
        basic(BasicAuthentication)
      }
    }
  }
  publications {
    maven(MavenPublication) {
      from components.java
      groupId group
      artifactId projectName
      version version
    }
  }
}
